#!/bin/bash
# to test the functionnality :
# yunohost backup create -n "homeassistant-test" --apps homeassistant
# yunohost app remove homeassistant
# yunohost backup restore "homeassistant-test"

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

# manage script failure
ynh_clean_setup () {
  ynh_clean_check_starting
}
ynh_abort_if_errors

# retrieve arguments
app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get --app="$app" --key=domain)
port=$(ynh_app_setting_get --app="$app" --key=port)
python=$(ynh_app_setting_get --app="$app" --key=python)

# definie useful vars
final_path="/opt/yunohost/$app"
home_path="/home/yunohost.app/$app"
path_url="/"

ynh_script_progression --message="Validating recovery parameters..."
# check domain/path availability
[ ! -d "$final_path" ] || ynh_die --message="This path already contains a folder"
ynh_webpath_available --domain="$domain" --path_url="$path_url" || ynh_die "$domain/$path_url is not available, please use an other domain."

ynh_script_progression --message="Restoring the port and opening it..."
# restore port
ynh_exec_warn_less yunohost firewall allow TCP $port

ynh_script_progression --message="Restoring dedicated user, rights and folders..."
# restore dedicated system user
ynh_system_user_create --username="$app"
ynh_restore_file --origin_path="/etc/sudoers.d/$app"
# restore source
ynh_restore_file --origin_path="$final_path"
chown -R $app: "$final_path"

ynh_script_progression --message="Restoring the data..."
# restore data
ynh_restore_file --origin_path="$home_path"
chown -R $app: "$home_path"
chmod -R +x "$home_path/.homeassistant/bin"

ynh_script_progression --message="Restoring the packages dependencies..."
# add required packages
myynh_install_dependencies --python="$python"

ynh_script_progression --message="Restoring the dedicated service..."
ynh_restore_file --origin_path="/etc/systemd/system/$app@$app.service"
# add service in admin panel
yunohost service add "$app@$app" --log "$home_path/.$app/home-assistant.log" --description "Home Assistant server" --needs_exposed_ports $port

ynh_script_progression --message="Starting the Home Assistant server..."
# add --verbose to service
sed --in-place "/ExecStart/s/$/ --verbose/" "/etc/systemd/system/$app@$app.service"
# start
ynh_systemd_action --service_name="$app@$app" --action=start --line_match="Home Assistant initialized" --log_path="systemd" --timeout=3600
# remove --verbose from service and restart
ynh_replace_string --match_string=" --verbose" --replace_string="" --target_file="/etc/systemd/system/$app@$app.service"
systemctl daemon-reload
ynh_systemd_action --service_name="$app@$app" --action=restart --line_match="Started Home Assistant" --log_path="systemd" --timeout=3600

ynh_script_progression --message="Restoring nginx web server..."
ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"
# restore logrotate
ynh_restore_file --origin_path="/etc/logrotate.d/$app"

# reload nginx
ynh_systemd_action --service_name=nginx --action=reload

ynh_script_progression --message="Recovery of $app completed" --last
